/*
 * @Author: 姚恒锋 1921934563@qq.com
 * @Date: 2023-09-13 17:20:04
 * @LastEditors: 姚恒锋 1921934563@qq.com
 * @LastEditTime: 2023-09-22 11:54:13
 * @FilePath: \hid-handle\test\handle_write_file.js
 * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE
 */
const HANDLE = require("../handle.js");

// var device = new HANDLE.HANDLE(0x264a, 0x232a);
// var device = new HANDLE.HANDLE(0x483, 0x5750);

// let devices = HANDLE.devices();

console.info("devices:", devices)
let devices = HANDLE.devices();
var device = null;
for(const d of devices){
    if(new HANDLE.HANDLE(d.path) !== null){
        device = new HANDLE.HANDLE(d.path);
    }
}

// devices.forEach(item => {
  var device = new HANDLE.HANDLE(item.path);
 
  console.info("device: ", device)
  console.info("getDeviceInfo: ", device.getDeviceInfo())

  const str = `{"000":"00A04100410041007100810","001":"101106","002":"23011040110601119","003":"31204072203080706","004":"42011040000110623001119","005":"500020030040","006":"60200","020":"60100","021":"60200","022":"700","023":"710","022":"60100","025":"00A04100410041007100810","026":"00A04100410041007100810","027":"00A04100410041007100810","028":"00A04100410041007100810","029":"00A04100410041007100810"}`
  const hexBuff = [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x0e, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x02, 0x0e, 0x3c, 0x80, 0xc0, 0xc0, 0xc0, 0x80, 0x3c, 0x0e, 0x02, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xde, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x3e, 0x7e, 0x7e, 0x7e, 0xfe, 0xfc, 0xfc, 0xf8, 0xf9, 0xf3, 0xf2, 0xf2, 0xe0, 0xe0, 0x00, 0x82, 0xc7, 0xef, 0xef, 0xef, 0xe7, 0x82, 0x00, 0xc0, 0xe4, 0xf6, 0xf3, 0xf3, 0xf9, 0xf8, 0xfc, 0xfc, 0xfe, 0xfe, 0x7f, 0x7f, 0x3e, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x1c, 0x3c, 0x3e, 0xbf, 0x9f, 0x9f, 0x9f, 0x8f, 0x8f, 0x8f, 0x07, 0x00, 0x83, 0xc7, 0xcf, 0xcf, 0xcf, 0xcf, 0x83, 0x00, 0x07, 0x8f, 0x8f, 0x9f, 0x9f, 0x9f, 0x9f, 0x9e, 0x1e, 0x1e, 0x1c, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x0c, 0x0e, 0x07, 0x03, 0x00, 0x80, 0xc0, 0x40, 0x20, 0x00, 0x00, 0x12, 0x3b, 0xbf, 0xbf, 0xbf, 0xbb, 0xbb, 0x39, 0x10, 0x00, 0x00, 0x20, 0x60, 0xc0, 0x80, 0x00, 0x03, 0x07, 0x0e, 0x0c, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x60, 0x3e, 0x07, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x07, 0x27, 0x77, 0xf7, 0x77, 0x27, 0x07, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x07, 0x3e, 0x60, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]

  // const str = hexBuff.map(item => parseInt(item)).join("");

  console.info(str);

  const sliceLength = 64;
  // 切片后的数组
  let slicedArray = [];

  // 遍历数组并切片
  for (let i = 0; i < str.length; i += sliceLength) {
    let slice = str.slice(i, i + sliceLength);
    slicedArray.push(slice);
  }
  console.info(slicedArray)

  slicedArray.forEach(item => {
    device.writeStr(item)
  })
// })



